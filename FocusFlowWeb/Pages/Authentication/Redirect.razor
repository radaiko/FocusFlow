@page "/redirect"
@using FocusFlowWeb.Services
@using FocusFlowWeb.Utils
@inject NavigationManager Navigation
@inject GoogleAuthStateProvider AuthStateProvider
@inject IHttpContextAccessor HttpContextAccessor

@code {
    protected override async Task OnInitializedAsync() {
        Logger.Debug("Redirect page initialized");
        // Extract the query parameters from the URL
        var uri = Navigation.ToAbsoluteUri(Navigation.Uri);
        var query = System.Web.HttpUtility.ParseQueryString(uri.Query);

        // Check the result parameter
        var result = query["result"];
        if (result == "success") {
            // Extract the authorization code from the query parameters
            var code = query["code"];
            if (!string.IsNullOrEmpty(code)) {
                // Call a method to handle the login with the authorization code
                await HandleLoginAsync(code);
            }
            else {
                // Redirect to the login page if the code is missing
                Navigation.NavigateTo("/login");
            }
        }
        else {
            // Redirect to the login page if the result is not successful
            Navigation.NavigateTo("/login");
        }
    }

    private async Task HandleLoginAsync(string code) {
        // Implement the login logic using AuthStateProvider
        if (AuthStateProvider != null) {
            var success = await AuthStateProvider.HandleGoogleLoginAsync(code, HttpContextAccessor.HttpContext);
            Logger.Debug($"Login success: {success}");
            if (success) {
                // Redirect to the home page after successful login
                Navigation.NavigateTo("/");
            }
            else {
                // Redirect to the login page if the login failed
                Navigation.NavigateTo("/login");
            }
        }
    }
}