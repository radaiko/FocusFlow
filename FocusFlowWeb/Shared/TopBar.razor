@using FocusFlowWeb.Services
@inject GoogleAuthStateProvider GoogleAuthStateProvider
@inject NavigationManager NavigationManager


<div class="container">
    @if (isLoggedIn) {
    <header>
        <button @onclick="Logout">Logout</button>
    </header>
    }
    else {
    <header>
        <button @onclick="RedirectToLogin">Login</button>
    </header>
    }
</div>
@code {
    private bool isLoggedIn;

    protected override async Task OnInitializedAsync() {
        var authState = await GoogleAuthStateProvider.GetAuthenticationStateAsync();
        isLoggedIn = authState.User.Identity?.IsAuthenticated ?? false;
        GoogleAuthStateProvider.AuthenticationStateChanged += async (task) => await OnAuthenticationStateChanged(task);
    }
    private async Task OnAuthenticationStateChanged(Task<AuthenticationState> task) {
        var authState = await GoogleAuthStateProvider.GetAuthenticationStateAsync();
        isLoggedIn = authState.User.Identity?.IsAuthenticated ?? false;
    }

    private void RedirectToLogin() {
        NavigationManager.NavigateTo("/login");
    }

    private void Logout() {
        GoogleAuthStateProvider.NotifyUserLogout();
        NavigationManager.NavigateTo("/login");
    }
}